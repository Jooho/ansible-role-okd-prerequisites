---

# - name: Install the required rpms
#   yum:
#     name:
#       - wget
#       - git 
#       - yum-utils
#       - net-tools
#       - bind-utils
#       - iptables-services
#       - bridge-utils
#       - bash-completion
#       - kexec-tools
#       - sos 
#       - psacct
#       - python-passlib
#       - NetworkManager
#     state: present
#   become: yes
#   register: rpm_install
#   async: 1800
#   poll: 0

# - name: Wait for installing required rpms
#   async_status: jid="{{ rpm_install.ansible_job_id }}"
#   become: yes
#   register: jobs
#   until: jobs.finished
#   retries: 180
#   delay: 10

# https://github.com/ansible/ansible/issues/47210

- name: Install the required rpms
  shell: yum install -y wget git yum-utils net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct python-passlib NetworkManager 
  become: yes

- name: upgrade all packages
  yum:
    name: '*'
    state: latest
  become: yes
  register: rpm_upgrade
  async: 1800
  poll: 0

- name: Wait for upgrade OS
  async_status: jid="{{ rpm_upgrade.ansible_job_id }}"
  become: yes
  register: jobs
  until: jobs.finished
  retries: 180
  delay: 10

- name: Reboot VMs
  reboot:    
  become: yes
 
- name: Install docker
  yum:
    name: "docker-{{ docker_version }}"
    state: present
    update_cache: yes
  register: docker_install
  become: yes

- name: Configure docker-storage-setup configuration
  copy:
    content: |
      STORAGE_DRIVER=overlay2
      CONTAINER_ROOT_LV_NAME=dockerlv
      CONTAINER_ROOT_LV_SIZE=100%FREE
      CONTAINER_ROOT_LV_MOUNT_PATH=/var/lib/docker
      DEVS=/dev/{{ docker_storage_disk }}
      VG=docker-vg
      EXTRA_STORAGE_OPTIONS="--storage-opt overlay2.size=3G"
    dest: /etc/sysconfig/docker-storage-setup
  become: yes
  when: docker_install.changed

- name: Run docker-storage-setup
  command: docker-storage-setup
  become: yes
  when: docker_install.changed

- name: Start and enable docker
  systemd:
    name: docker
    enabled: yes
    state: started
  become: yes
  when: docker_install.changed

- import_tasks: ./interim-dns.yml
  when: interim_dns_use|bool
  
- name: Start NetworkManager
  service:
    name: NetworkManager
    state: restarted
    enabled: true
  become: yes

- name: Determine if firewalld is installed
  yum:
    name: "firewalld"
    state: present
  become: yes
  register: firewalld_installed

- name: Stop firewalld
  service:
    name: firewalld
    state: stopped
    enabled: false
  become: yes
  when:
  - firewalld_installed.installed_versions | default([]) | length > 0 

- name: Start iptables
  service:
    name: iptables
    state: started
    enabled: true
  become: yes
